"""
Django settings for ftl project.

Generated by 'django-admin startproject' using Django 2.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

#  Copyright (c) 2021 Exotic Matter SAS. All rights reserved.
#  Licensed under the Business Source License. See LICENSE at project root for more information.

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import pathlib
from datetime import timedelta

from celery.schedules import crontab
from django.contrib.messages import constants as message_constants
from django.utils import timezone

from ftl.enums import FTLStorages, FTLPlugins

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "NOT-SECURE"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

# This param allow app to run with an unbuilt frontend
DEV_MODE = False

# Custom user auth model
AUTH_USER_MODEL = "core.FTLUser"

# Application definition

INSTALLED_APPS = [
    "whitenoise.runserver_nostatic",
    "ftl.apps.MyAdminConfig",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    "django_registration",
    "django_otp",
    "django_otp.plugins.otp_totp",
    "django_otp.plugins.otp_static",
    "ftl.otp_plugins.otp_ftl",
    "mptt",
    "oauth2_provider",
    "rest_framework",
    "webpack_loader",
    "axes",
    "captcha",
    "django_celery_beat",
    "ftl",
    "setup.apps.SetupConfig",
    "core.apps.CoreConfig",
    "account.apps.AccountConfig",
    "frontend",
]

if DEBUG and DEV_MODE:
    INSTALLED_APPS += ["debug_toolbar", "sslserver"]

AUTHENTICATION_BACKENDS = [
    # AxesBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
    "axes.backends.AxesBackend",
    # Django ModelBackend is the default authentication backend.
    "django.contrib.auth.backends.ModelBackend",
]

MIDDLEWARE = [
    "ftl.ftl_admin_ip_filter_middleware.FTLAdminIPFilter",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django_otp.middleware.OTPMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "csp.middleware.CSPMiddleware",
    "ftl.ftl_setup_middleware.FTLSetupMiddleware",
    "ftl.ftl_locale_middleware.FTLLocaleMiddleware",
    "axes.middleware.AxesMiddleware",
]

if DEBUG and DEV_MODE:
    MIDDLEWARE += [
        "debug_toolbar.middleware.DebugToolbarMiddleware",
    ]

ROOT_URLCONF = "ftl.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "ftl", "templates", "ftl")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "core.context.ftl_context_data",
            ],
        },
    },
]

WSGI_APPLICATION = "ftl.wsgi.application"

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "postgres",
        "USER": "postgres",
        "PASSWORD": "NOT SECURE",
        "HOST": "127.0.0.1",
        "PORT": "5432",
        "ATOMIC_REQUESTS": True,
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "en-us"

LANGUAGES = [
    ("fr", "Fran√ßais"),
    ("en", "English"),
]

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = "/assets/"  # public path
STATIC_ROOT = os.path.join(BASE_DIR, "assets")  # internal path
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "frontend", "dist"),  # Webpack final bundle
    os.path.join(BASE_DIR, "frontend", "pdfjs"),
    os.path.join(BASE_DIR, "frontend", "src", "assets"),
    os.path.join(BASE_DIR, "account", "static"),
    os.path.join(BASE_DIR, "ftl", "static"),
    os.path.join(BASE_DIR, "core", "static"),
)

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# This header indicates to the browser that the MIME types advertised in the Content-Type headers should
# not be changed (by "sniffing" the content).
SECURE_CONTENT_TYPE_NOSNIFF = True

# Content Security Policy header (CSP)
# More info can be found on https://django-csp-test.readthedocs.io/en/latest/configuration.html

# By default, we only report CSP errors in the browser console.
# To enable CSP enforcing in the browser, set to False.
# Warning! this will break FTL (JS not loading, missing CSS style, PDF or OO viewer) if the headers are not correctly
# configured.
CSP_REPORT_ONLY = True

CSP_DEFAULT_SRC = ("'self'",)
CSP_IMG_SRC = (
    "'self'",
    "data:",
)
CSP_SCRIPT_SRC = ("'self'",)
CSP_STYLE_SRC = ("'self'",)
CSP_FRAME_SRC = ("'self'",)
CSP_CONNECT_SRC = ("'self'", "blob:")
CSP_INCLUDE_NONCE_IN = ("script-src",)

# IPs allowed to see the debug toolbar app
INTERNAL_IPS = ["127.0.0.1"]

# Login url used by @login_required decorator
LOGIN_URL = "login"

# Redirect user to this url after login by default
LOGIN_REDIRECT_URL = "/app"

# Redirect when 2fa is needed
OTP_LOGIN_URL = "/accounts/2fa/check"
OTP_TOTP_ISSUER = "Paper Matter"
FIDO2_RP_NAME = "Paper Matter"

# Default settings for browser used for functional tests
DEFAULT_TEST_BROWSER = "chrome"
TEST_BROWSER_HEADLESS = True

# Update lines below if you don't want to use the default paths for browser and driver
BROWSER_BINARY_PATH = None
DEFAULT_CHROMEDRIVER_PATH = "chromedriver"
DEFAULT_GECKODRIVER_PATH = "geckodriver"

# Email activation settings
ACCOUNT_ACTIVATION_DAYS = 7  # One-week activation window

# Django Rest Framework settings
REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",),
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "ftl.otp_plugins.otp_ftl.middleware.FTLSessionAuthentication",
        "ftl.ftl_oauth2_auth.FTLOAuth2Authentication",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
    "PAGE_SIZE": 10,
    "DEFAULT_THROTTLE_CLASSES": [
        "rest_framework.throttling.AnonRateThrottle",
        "rest_framework.throttling.UserRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {"anon": "1/second", "user": "15/second"},
    "EXCEPTION_HANDLER": "core.rest_exc_handler.custom_exception_handler",
}

# FTL Account Processors
FTL_ACCOUNT_PROCESSORS = [
    "core.ftl_account_processor.ftl_account_data",
]

# OAuth2 Provider
OAUTH2_PROVIDER = {
    # TODO to be completed with more
    "SCOPES": {
        "read": "Read access to your account",
        "write": "Write access to your account",
    }
}

WEBPACK_LOADER = {
    "DEFAULT": {
        "CACHE": not DEBUG,
        "STATS_FILE": os.path.join(BASE_DIR, "frontend", "webpack-stats.json"),
    }
}

# Workaround for configuring a preloaded Tika
os.environ["TIKA_SERVER_JAR"] = pathlib.Path(
    os.path.join(BASE_DIR, "vendors", "tika-server-1.20.jar")
).as_uri()

# SMTP EMAIL SERVER conf
EMAIL_HOST = "localhost"
EMAIL_HOST_USER = ""
EMAIL_HOST_PASSWORD = ""
EMAIL_PORT = 25
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = "noreply@localhost.com"

# Customize MESSAGE_TAGS to match bootstrap alert classes
MESSAGE_TAGS = {
    message_constants.INFO: "text-center alert alert-primary",
    message_constants.SUCCESS: "text-center alert alert-success",
    message_constants.WARNING: "text-center alert alert-warning",
    message_constants.ERROR: "text-center alert alert-danger",
}

"""
DOCUMENT BINARY STORAGE
=======================
Remote storage requires:
    - extra settings (see EXTRA SETTINGS FOR STORAGE below)
    - extra Python module (see ftl.constants.FTLStorages docstring)
"""
DEFAULT_FILE_STORAGE = FTLStorages.FILE_SYSTEM

"""
DOCUMENT PROCESSING PLUGINS (order is important)
================================================
- Edit lines below to change enabled plugins
    - Check ftl.enums.FTLplugins docstring to see plugins list and know what's required for the desired plugin
    - Most OCR plugins required a specific DEFAULT_FILE_STORAGE
- Only one plugin of each type should be enable at a time
"""
FTL_DOC_PROCESSING_PLUGINS = [
    # FTLPlugins.THUMBNAIL_ONLY_OFFICE,  # Thumbnail generation plugin
    # OCR plugins should be defined here
    # Extract text of non scanned documents (required)
    FTLPlugins.TEXT_EXTRACTION_TIKA,
    # Detect lang (required for search feature)
    FTLPlugins.LANG_DETECTOR_LANGID,
    # Search feature (required)
    FTLPlugins.SEARCH_ENGINE_PGSQL_TSVECTOR,
]

"""
EXTRA SETTINGS FOR REMOTE STORAGE OR OCR_GOOGLE_VISION_SYNC
"""
# Additional settings required if you chose a remote storage
if DEFAULT_FILE_STORAGE == FTLStorages.AWS_S3:  # Amazon S3 storage
    AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
    AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
    AWS_STORAGE_BUCKET_NAME = os.getenv("AWS_STORAGE_BUCKET_NAME")
    AWS_S3_ENDPOINT_URL = os.getenv("AWS_S3_ENDPOINT_URL")
    AWS_S3_REGION_NAME = os.getenv("AWS_S3_REGION_NAME")
    AWS_DEFAULT_ACL = "private"
    S3_USE_SIGV4 = True
if (
    DEFAULT_FILE_STORAGE == FTLStorages.GCS
    or FTLPlugins.OCR_GOOGLE_VISION_SYNC in FTL_DOC_PROCESSING_PLUGINS
):
    import json
    from google.oauth2 import service_account

    credentials_raw = json.loads(os.environ.get("GCS_CREDENTIALS_CONTENT"))
    GS_CREDENTIALS = service_account.Credentials.from_service_account_info(
        credentials_raw
    )
    if DEFAULT_FILE_STORAGE == FTLStorages.GCS:
        GS_BUCKET_NAME = os.environ.get("GCS_BUCKET_NAME")

"""
Settings for ocrmypdf plugin
"""
FTL_OCRMYPDF_API_URL = "http://localhost:8000"
FTL_OCRMYPDF_API_KEY = "changeme"

"""
SUPPORTED DOCUMENTS TYPES
"""
FTL_SUPPORTED_DOCUMENTS_TYPES = {
    ".pdf": ["application/pdf"],
    ".txt": ["text/plain"],
    ".rtf": ["application/rtf", "text/rtf"],
    ".doc": ["application/msword"],
    ".xls": ["application/vnd.ms-excel", "application/excel"],
    ".ppt": ["application/vnd.ms-powerpoint", "application/mspowerpoint"],
    ".docx": [
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    ],
    ".xlsx": ["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
    ".pptx": [
        "application/vnd.openxmlformats-officedocument.presentationml.presentation"
    ],
    ".odt": ["application/vnd.oasis.opendocument.text"],
    ".odp": ["application/vnd.oasis.opendocument.presentation"],
    ".ods": ["application/vnd.oasis.opendocument.spreadsheet"],
}

"""
Delete disabled accounts from instance
=======================
When the user requests a deletion of his/her account, we completely remove the account from the database by default.
Set to False to disable it and anonymize the account.
"""
FTL_DELETE_DISABLED_ACCOUNTS = True
FTL_SUFFIX_DELETED_ACCOUNT = "@disabled.pm.app"  # No need to change this
FTL_SUFFIX_DELETED_ORG = "-disabled"  # No need to change this

"""
Captcha on signup form
=======================
Add a simple captcha to the signup form.
Please refer to https://django-simple-captcha.readthedocs.io/en/latest/advanced.html#configuration-toggles
for more configuration settings.
"""
FTL_ENABLE_SIGNUP_CAPTCHA = False
CAPTCHA_FONT_SIZE = 42

"""
Celery settings
"""
CELERY_BROKER_URL = "redis://localhost:6379"
CELERY_TASK_ROUTES = {
    "core.tasks.apply_ftl_processing": {"queue": "ftl_processing"},
    "core.tasks.delete_document": {"queue": "med"},
    "core.tasks.send_email_async": {"queue": "med"},
}
CELERY_BEAT_SCHEDULE = {
    "clean-org-everyday": {
        "task": "core.tasks.batch_delete_org",
        "schedule": crontab(minute=5, hour=1),
    },
    "clean-doc-everyhour": {
        "task": "core.tasks.batch_delete_doc",
        "schedule": crontab(minute=0, hour="*"),
    },
    "clean-oauth-tokens-everyday": {
        "task": "core.tasks.batch_delete_oauth_tokens",
        "schedule": crontab(minute=15, hour=1),
    },
    "documents-reminder-everyhour": {
        "task": "core.tasks.batch_documents_reminder",
        "schedule": crontab(minute=0, hour="*"),
    },
}

"""
Enable Django Axes to have login rate limit and account activity logging (IP addresses and user agent).
"""
AXES_ENABLED = False
AXES_FAILURE_LIMIT = 5
AXES_COOLOFF_TIME = timedelta(minutes=10)
AXES_LOCKOUT_TEMPLATE = "ftl/axes/locked.html"

"""
Enable IP allowlist for Django Admin access
"""
# FTL_ADMIN_ENABLE_IP_PROTECTION = True
# FTL_ADMIN_IP_RANGE_ALLOWED = ["127.0.0.1/32", "10.0.0.0/8"]
# FTL_ADMIN_IP_PROXY_COUNT = 1
# FTL_ADMIN_IP_META_PRECEDENCE_ORDER = [
#     "HTTP_X_FORWARDED_FOR",
#     "X_FORWARDED_FOR",
# ]

"""
Enable Developer API
"""
FTL_ENABLE_DEV_API = False

"""
URI of the instance
This is the host address which will be used to generate an absolute URI if there is none given by the current http
request. It must include the scheme and port.
"""
FTL_EXTERNAL_HOST = "http://localhost:8000"

"""
OnlyOffice integration
"""
FTL_ENABLE_ONLY_OFFICE = False
# Public URL to the OnlyOffice javascript bundle
FTL_ONLY_OFFICE_PUBLIC_JS_URL = (
    "http://localhost:8080/web-apps/apps/api/documents/api.js"
)
# URL to the OnlyOffice API conversion server (used by processing plugin to generate thumbnail)
FTL_ONLY_OFFICE_API_SERVER_URL = "http://localhost:8080"
# URL given to OnlyOffice to download FTL document binary
FTL_ONLY_OFFICE_INTERNAL_DOWNLOAD_SERVER_URL = "http://localhost:8080"
# This is the JWT_SECRET in your OnlyOffice conf
FTL_ONLY_OFFICE_SECRET_KEY = "NOT-SECURE"
# This setting shouldn't be updated
FTL_ONLY_OFFICE_SUPPORTED_DOCUMENTS_TYPES = {
    "text/plain",
    "application/rtf",
    "text/rtf",
    "application/msword",
    "application/vnd.ms-excel",
    "application/excel",
    "application/vnd.ms-powerpoint",
    "application/mspowerpoint",
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
    "application/vnd.oasis.opendocument.text",
    "application/vnd.oasis.opendocument.presentation",
    "application/vnd.oasis.opendocument.spreadsheet",
}

# ==================================================
# No settings under this line
# Auto import local `settings_local.py` if available
try:
    from .settings_local import *

    print("Local setting imported\n")
except ImportError as e:
    print(e)
    print("No local setting\n")
